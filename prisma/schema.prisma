// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  // output   = "/app/generated/prisma-client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


// Drizzle'daki "columns" tablosuna karşılık gelen Prisma Model'ı
model Column {
  id          String    @id @default(uuid())
  title       String    @db.Text
  description String?   @db.Text
  order       Int       @default(0)
  deletedAt   DateTime? @map("deleted_at")
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime  @updatedAt @map("updated_at")

  // 'tasks' tablosu ile olan ilişki
  tasks       Task[]

  @@map("columns")
}

// Drizzle'daki "tasks" tablosuna karşılık gelen Prisma Model'ı
model Task {
  id          String    @id @default(uuid())
  title       String    @db.Text
  description String?   @db.Text
  order       Int       @default(0)
  priority    Priority  @default(MEDIUM)
  status      Status    @default(TODO)
  assigneeId  String?   @map("assignee_id") @db.Text
  dueDate     DateTime? @map("due_date")
  deletedAt   DateTime? @map("deleted_at")
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime  @updatedAt @map("updated_at")

  // Foreign Key
  columnId    String    @map("column_id")

  // "Column" model'ı ile ilişki
  column      Column    @relation(fields: [columnId], references: [id], onDelete: Cascade)

  @@map("tasks")
}

// Drizzle'daki "priority" alanına karşılık gelen Enum
enum Priority {
  LOW
  MEDIUM
  HIGH
}

// Drizzle'daki "status" alanına karşılık gelen Enum
enum Status {
  TODO
  IN_PROGRESS
  DONE
}